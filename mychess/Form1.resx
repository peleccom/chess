<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAOvwAA
        Dr8BOAVTJAAABJJJREFUaEPtmEkotVEYx69ZKVEWSDItiIUhmW0sDGUoC0okbAhlYSMlZWPYUCIylTFC
        oixINrIj00ZRhgwh88zz9T/13lzfe+8973T7+rqn3i7ve85znt/5P+ec5xwd/SdF959wkBXkX1PSqohV
        EY1GQHZoXV5eUm1tLe3t7Ym6NjU1RQUFBXRxcaGR64ZmZYPU1NSQTqejoKAgWl1dNbA6OTlJ9vb27Htx
        cfG/DZKamsocxRMZGUlXV1d6h4X3wq8lSGQrUl9frweBwxkZGbSysmLwTgD5+vqi8/NzOj09pevra024
        ZIO8vr6KOv1bjZ//JyUlUWNjIwNeXl6mp6cn1aBkg2Cym3Ja+CbMFS8vL5qdnWXOY051d3dTZ2cne6dG
        kQ0SHx/PBWJnZ8fq2draEmDi4uIoLS2NqfL+/k59fX1UWFiomEUWSHV1NReEKcUAlpCQQIeHh/Ty8sLs
        KSmSWyMkBAfd3d1pY2ODmpqaFIENDAwwBtgFlJwiCQQrDiasALK+vs76bG5uVgQCez09PcxWeHg4nZyc
        SGaRBNLe3q532NPTk3WG1Ss7O1sxCGAw8efn5yk9PZ0eHx8lwXCDYGI6OTnpHcaGiILllGf14qnj7OxM
        Ozs7LLWZmZnRBqSystLAYWEVwi+Pk7x1SkpK6Pb2loKDg+nm5oYbhlsRXkfUqDc3N0dZWVk0NDSkLkhM
        TIyqo24OtqqqiqU0Dg4O6oEglVA7fMyBODo60tHREdtA9/f3uWDMhhZWEHMda/F9cXGR8ISFhSkHGR8f
        Z/IqdRQpiVQbpaWl+k2Sh8SoIt/f31RUVCTZAbGzSEhIiGQ7rq6uzH8fHx9aWFgwy2IUZG1tjWxsbCQ7
        IIC4ubnpj8FS1RDqv729UUtLC+Xn58sHaW1t1UPgbxjkdcjf35+2t7f1nfO2+13v4OCAbZBIW8wVUUVw
        ZsDxFYaRhguFZ/XKzc01yJW2tra4B+A3yODgINsUfX19CaFuqoiC3N/fE0ZVMBwdHU1RUVFmHerq6vqr
        r9DQULPtjClWXl5OHx8fFBERYaCwGJAoCBJBKSsNJuTx8fFf9nd3dw3yM6khlpKSwmxilx8ZGZGuCFq0
        tbVxjST2GbGc6PPzk+0BUp3/Wd/Pz485X1ZWRg0NDfJAcPHm4eFh0pHAwECjtyJ1dXWKIACE8z4KMmwk
        rZLniNAApz9c82BTBJSLi4uBc2dnZ6K2kewJlw5KFEFblN7eXmUgMIK1HKGD80h/f78eZHNzUxRienpa
        sRI/4dHJ8PAwVVRUyFfEZEuRjxMTE6pCCIqMjo5SXl6eZUDUVkJQBd6PjY1RTk6Oyb3EbPbLowrSGeRG
        SueDWHv0j+QVR2uEubGiGAR7DnZzLSCE0ELIJicn08PDg3YgS0tLmkH8BImNjaW7uzvtQDo6OiwCgqtW
        zUAQVlqfICEBQgt3zZqBILkMCAjQTBEh8wZIYmKidnMEILiI9vb2Ztmymg9sIuNGQaaQmZlJz8/P2s0R
        rCSQHL9qPoJNeI6LbVNhhTqKl1+efcYSdawglhhlKX1YFZEyWpao+wfT7PzqL0q+bwAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>