<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAOwAAA
        DsABataJCQAABJNJREFUaEPtmEko/VEUx82UEmWBJNOCWBiS2cbCUIayoETChlAWNlJSNoYNJSJTGSMk
        yoJkIzsybRRlyBAyz5z//3vr9/L4vffub3pJTv16/H73nns+95x7z7nXkv6LxW8QgPwGsfgNECyq/kB+
        2Az8eeSHOUT+Gjk7O6Oqqira3t4WZRofH6fc3Fw6PT01C7Ps0KqsrET+IX9/f1paWtIzdmxsjGxsbNj3
        goKCnw2SlJTEDMUTFhZG5+fnOoOF98KvOUhke6SmpkYHAoNTU1NpcXFR750A8v7+TicnJ3R0dEQXFxea
        cMkGeXp6EjX6qzc+/x8fH091dXUMeGFhge7v71WDkg2CxW7MaOGbsFbc3d1pamqKGY811dHRQW1tbeyd
        GiIbJCYmhgvE2tqatbOysiLAREdHU3JyMvPKy8sLdXd3U15enmIWWSAVFRVcEMY8BrDY2Fja29ujx8dH
        pk+JSO6NkBAMdHFxodXVVaqvr1cE1tvbyxigF1ByRBIIdhwsWAFkZWWFjdnQ0KAIBPo6OzuZrpCQEDo8
        PJTMIgmkpaVFZ7CbmxsbDLtXRkaGYhDAYOHPzMxQSkoK3d3dSYLhBsHCtLe31xmMhAjBdsqze/G0cXBw
        oM3NTVbaTE5OagNSVlamZ7CwC+GXx0jeNoWFhXR1dUUBAQF0eXnJDcPtEV5D1Gg3PT1N6enp1N/fry5I
        ZGSkqrNuCra8vJyVNLa2tuqBoJRQO3xMgdjZ2dH+/j5LoDs7O1wwJkMLO4ipgbX4Pjc3R3iCg4OVg4yM
        jDD3KjUUJYlUHUVFRbokyUNi0CMfHx+Un58v2QCxs0hgYKBkPU5OTsx+T09Pmp2dNcliEGR5eZksLS0l
        GyCAODs7647BUr0htH9+fqbGxkbKycmRD9LU1KSDwN9QyGuQj48PbWxs6Abn7fe13e7uLkuQKFtMiahH
        cGbA8RWKUYYLwrN7ZWVl6dVK6+vr3BPwFaSvr48lRS8vL0KoGxNRkJubG8KsCoojIiIoPDzcpEHt7e3f
        xgoKCjLZz5DHSkpK6PX1lUJDQ/U8LAYkCoJCUMpOgwV5cHDwTf/W1pZefSY1xBITE5lOZPnBwUHpHkGP
        5uZmrplEnhGrid7e3lgOkGr85/be3t7M+OLiYqqtrZUHgos3V1dXo4b4+fkZvBWprq5WBAEgnPchqLBR
        tEpeI0IHnP5wzYOkCChHR0c9446Pj0V1o9gTLh2UeAR9IV1dXcpAoAR7OUIH55Genh4dyNramijExMSE
        Yk98hscgAwMDVFpaKt8jRnuKfBwdHVUVQvDI0NAQZWdnmwdEbU8IXoH1w8PDlJmZaTSXmKx+ebyCcga1
        kdL1INYf46N4xdEaYW5IFIMg5yCbawEhhBZCNiEhgW5vb7UDmZ+f1wziM0hUVBRdX19rB9La2moWEFy1
        agaCsNL6BAkXILRw16wZCIpLX19fzTwiVN4AiYuL026NAAQX0R4eHqxaVvOBTlTcEFQKaWlp9PDwoN0a
        wU4Cl+NXzUfQCctxsW0srNBG8fbLk2fM0eYPxByzLGWMP49ImS1ztP0H8KA5r1ZWWJAAAAAASUVORK5C
        YII=
</value>
  </data>
</root>