<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAGYktHRAD/AP8A/6C9p5MAAASSSURBVGhD7ZhJKLVRGMev
        WSlRFkgyLYiFIZltLAxlKAtKJGwIZWEjJWVj2FAiMpUxQqIsSDayI9NGUYYMIfPM8/U/9d5c33vvPe90
        +/q6p94u73vOc57f+T/nnOccHf0nRfefcJAV5F9T0qqIVRGNRkB2aF1eXlJtbS3t7e2JujY1NUUFBQV0
        cXGhkeuGZmWD1NTUkE6no6CgIFpdXTWwOjk5Sfb29ux7cXHxvw2SmprKHMUTGRlJV1dXeoeF98KvJUhk
        K1JfX68HgcMZGRm0srJi8E4A+fr6ovPzczo9PaXr62tNuGSDvL6+ijr9W42f/yclJVFjYyMDXl5epqen
        J9WgZINgsptyWvgmzBUvLy+anZ1lzmNOdXd3U2dnJ3unRpENEh8fzwViZ2fH6tna2hJg4uLiKC0tjany
        /v5OfX19VFhYqJhFFkh1dTUXhCnFAJaQkECHh4f08vLC7CkpklsjJAQH3d3daWNjg5qamhSBDQwMMAbY
        BZScIgkEKw4mrACyvr7O+mxublYEAns9PT3MVnh4OJ2cnEhmkQTS3t6ud9jT05N1htUrOztbMQhgMPHn
        5+cpPT2dHh8fJcFwg2BiOjk56R3GhoiC5ZRn9eKp4+zsTDs7Oyy1mZmZ0QaksrLSwGFhFcIvj5O8dUpK
        Suj29paCg4Pp5uaGG4ZbEV5H1Kg3NzdHWVlZNDQ0pC5ITEyMqqNuDraqqoqlNA4ODuqBIJVQO3zMgTg6
        OtLR0RHbQPf397lgzIYWVhBzHWvxfXFxkfCEhYUpBxkfH2fyKnUUKYlUG6WlpfpNkofEqCLf399UVFQk
        2QGxs0hISIhkO66ursx/Hx8fWlhYMMtiFGRtbY1sbGwkOyCAuLm56Y/BUtUQ6r+9vVFLSwvl5+fLB2lt
        bdVD4G8Y5HXI39+ftre39Z3ztvtd7+DggG2QSFvMFVFFcGbA8RWGkYYLhWf1ys3NNciVtra2uAfgN8jg
        4CDbFH19fQmhbqqIgtzf3xNGVTAcHR1NUVFRZh3q6ur6q6/Q0FCz7YwpVl5eTh8fHxQREWGgsBiQKAgS
        QSkrDSbk8fHxX/Z3d3cN8jOpIZaSksJsYpcfGRmRrghatLW1cY0k9hmxnOjz85PtAVKd/1nfz8+POV9W
        VkYNDQ3yQHDx5uHhYdKRwMBAo7cidXV1iiAAhPM+CjJsJK2S54jQAKc/XPNgUwSUi4uLgXNnZ2eitpHs
        CZcOShRBW5Te3l5lIDCCtRyhg/NIf3+/HmRzc1MUYnp6WrESP+HRyfDwMFVUVMhXxGRLkY8TExOqQgiK
        jI6OUl5enmVA1FZCUAXej42NUU5Ojsm9xGz2y6MK0hnkRkrng1h79I/kFUdrhLmxohgEew52cy0ghNBC
        yCYnJ9PDw4N2IEtLS5pB/ASJjY2lu7s77UA6OjosAoKrVs1AEFZanyAhAUILd82agSC5DAgI0EwRIfMG
        SGJionZzBCC4iPb29mbZspoPbCLjRkGmkJmZSc/Pz9rNEawkkBy/aj6CTXiOi21TYYU6ipdfnn3GEnWs
        IJYYZSl9WBWRMlqWqPsH0+z86i9Kvm8AAAAASUVORK5CYII=
</value>
  </data>
</root>